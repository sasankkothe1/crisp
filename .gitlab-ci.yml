stages:
  #- build
  #- rules
  #- launch
  - push
  - deploy

image: docker:20.10.7

services:
  - docker:20.10.7-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/backend:$CI_COMMIT_SHA

before_script:
  - cp $CD_DOCKER_COMPOSE_ENV .env
  - echo "CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE" >> .env
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# build:
#   stage: build
#   script:
#     - docker build -t $IMAGE_TAG ./backend
#     - docker push $IMAGE_TAG

# check_format:
#   stage: rules
#   script:
#     - docker pull $IMAGE_TAG
#     - docker run --entrypoint '/bin/sh' $IMAGE_TAG -c 'npm run check_format'
#   allow_failure: true

# lint:
#   stage: rules
#   script:
#     - docker pull $IMAGE_TAG
#     - docker run --entrypoint '/bin/sh' $IMAGE_TAG -c 'npm run lint'
  
# launch:
#   stage: launch
#   variables:
#     APP_NAME: crisp
#     PORT: 4000
#   script:
#     - docker pull $IMAGE_TAG
#     - docker run -d -e MONGODB_URI=$CI_MONGODB_URI -e PORT=$PORT -p $PORT:$PORT --name $APP_NAME $IMAGE_TAG
#     - sleep 60
#     - STATUS=$(docker inspect -f {{.State.Status}} $APP_NAME)
#     - if [[ "$STATUS" == "exited" ]]; then docker logs $APP_NAME && exit 1; else echo "Successful launch"; fi
#     - apk add --no-cache curl
#     - curl http://docker:$PORT/

push:
  stage: push
  script:
    - apk --update add docker-compose
    - docker-compose build
    - docker-compose push 
  only:
<<<<<<< HEAD
=======
    - feature/magic
>>>>>>> d74638a (okay letz see)
    - develop

deploy:
  stage: deploy
<<<<<<< HEAD
<<<<<<< HEAD
  script:
    - apk update 
    - apk add openssh-client
    - apk add docker-compose
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -H "$CD_SERVER_IP" >> ~/.ssh/known_hosts
    - docker-compose -H "ssh://$CD_USER@$CD_SERVER_IP" down
    - docker-compose -H "ssh://$CD_USER@$CD_SERVER_IP" pull
    - docker-compose -H "ssh://$CD_USER@$CD_SERVER_IP" up -d
  only:
    - develop
=======
  image: alpine:latest
=======
>>>>>>> 6415e13 (wip)
  script:
    - chmod og= $CD_ID_RSA
    - apk --update add openssh-client
    - apk add docker-compose
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$CD_ID_RSA")

    - docker-compose -H "ssh://$CD_USER@$CD_SERVER_IP" down
    - docker-compose -H "ssh://$CD_USER@$CD_SERVER_IP" pull
    - docker-compose -H "ssh://$CD_USER@$CD_SERVER_IP" up -d
  only:
    - develop
    - feature/magic
>>>>>>> d74638a (okay letz see)
